# Use Case: Prepare PostgreSQL
services:

  # Project URL: https://github.com/postgres/postgres
  # Docs URL: https://www.postgresql.org/docs/16/index.html
  postgres:
    image: postgres:16
    container_name: "postgres"
    restart: always
    networks: ['demo']
    environment:
      # *** Settings ***
      - POSTGRES_USER=${DB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DB_POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_POSTGRES_DB}
      - POSTGRES_NON_ROOT_USER=${DB_POSTGRES_NON_ROOT_USER}
      - POSTGRES_NON_ROOT_PASSWORD=${DB_POSTGRES_NON_ROOT_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      # *** Database Initializer ***
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
      # *** Volume configuration ***
      - ./db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${DB_POSTGRES_NON_ROOT_USER} -d ${DB_POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10


  # Project URL: https://github.com/pgadmin-org/pgadmin4
  # Docs URL: https://www.pgadmin.org/docs/pgadmin4/8.14/index.html
  pgadmin:
    image: dpage/pgadmin4:9.0.0
    #image: dpage/pgadmin4:8.14.0
    container_name: "pgadmin"
    restart: always
    networks: ['demo']
    environment:
      # *** Settings ***
      - PGADMIN_LISTEN_PORT=80
      # *** Users ***
      - PGADMIN_DEFAULT_EMAIL=admin@acme.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres
    ports:
      - 5050:80
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin

volumes:
  db-data:
  pgadmin-data:

networks:
  demo:
    driver: bridge