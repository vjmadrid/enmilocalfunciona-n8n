# Use Case: n8n with mcp
services:
  # Project URL: https://github.com/n8n-io/n8n
  # Docs URL: https://docs.n8n.io/
  n8n:
    image: n8nio/n8n:1.82.1
    container_name: "n8n"
    #container_name: "${PROJECT_NAME}n8n"
    restart: always
    networks: ['demo']
    environment:
      # *** General ***
      - GENERIC_TIMEZONE=Europe/Madrid
      - TZ=Europe/Madrid
      - NODE_ENV=production
      # *** Settings ***
      - N8N_SECURE_COOKIE=false
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY}
      # *** Auth ***
      #- N8N_BASIC_AUTH=true
      #- N8N_BASIC_AUTH_USERNAME=test1
      #- N8N_BASIC_AUTH_PASSWORD=test1
      # *** Logging ***
      #- N8N_LOG_LEVEL=debug
      #- N8N_LOG_OUTPUT=console,file
      #- N8N_LOG_FILE_LOCATION=/home/node/.n8n/logs/n8n.log
      #- N8N_LOG_FILE_MAXSIZE=50
      #- N8N_LOG_FILE_MAXCOUNT=60
    ports:
      - 5678:5678
    volumes:
      # *** General configuration ***
      - /var/run/docker.sock:/var/run/docker.sock:ro # Access to Docker on host machine
      # *** Volume configuration ***
      - ./mcp01-n8n-data/n8n:/home/node/.n8n
      - ./mcp01-n8n-data/other:/home/node/

volumes:
  mcp01-n8n-data:

networks:
  demo:
    name: demo
    driver: bridge